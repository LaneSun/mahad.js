(t=>{const e=0,i=1,r=2,s=Symbol("data_to"),n=Symbol("data_to_field"),o=(t,e)=>i=>{const r=Symbol();return t.push([i,r]),i.listen(r,e)},h=Object.getOwnPropertyDescriptors(class{get[s](){if(this[n])return this[n];{const t=Array(3).fill(0).map((t=>new Map));return this[n]=t,t}}modify(...t){return this.edit([0,...t])}set_to(t,e,i=[]){const r=this[s];for(const s in e)r[s].set(t,[e[s],i])}unset_to(t){for(const e of this[s])e.delete(t)}listen(t,e){return this.set_to(t,{[r]:e}),this}bind(t,e,i){return t.set_to(this,e,i),this}bind_clone(t){return this.assign(t),this.bind(t,{[r]:(t,e,i,r)=>{e.edit(...r)}})}make_bind(t,e){return(new this.constructor).bind(this,t,e)}bclone(){return(new this.constructor).bind_clone(this)}}.prototype);delete h.constructor,t.MahadArray=class extends Array{static unfold(t,e){const i=new this;for(;;){let r;if([t,r]=e(t),void 0===r)break;i.push(r)}return i.reverse()}toString(){return`(${this.map((t=>t.toString())).join(" ")})`}get val(){return this[0]}edit(...t){const e=this[s];let i=null;for(const r of t){const[t,s]=r;switch(t){case 0:const t=this.splice(s,r[2],...r[3]);for(const[i,[s,n]]of e[0])s(this,i,n,r,t,r[3]);i=t;break;case 1:const n=this.splice(s,r[2]);this.splice(s+r[3],0,...n);for(const[t,[i,s]]of e[1])i(this,t,s,r,n)}}for(const[i,[r,s]]of[...e[2]])r(this,i,s,t);return i}move(...t){return this.edit([1,...t])}move_at(t,e,i){return this.move(this.indexOf(t),e,i)}move_before(t,e,i){return this.move(this.indexOf(t)-e,e,i)}move_after(t,e,i){return this.move(this.indexOf(t)+1,e,i)}move_range(t,e,i){const r=this.indexOf(t),s=this.indexOf(e)+1;return this.move(r,s-r,i)}exchange(t,e,i=void 0,r=void 0){let s,n,o,h=this.indexOf(t);return void 0===i?(s=h+1,n=this.indexOf(e),o=n+1):void 0===r?(s=this.indexOf(e)+1,n=this.indexOf(i),o=n+1):(s=this.indexOf(e)+1,n=this.indexOf(i),o=this.indexOf(r)+1),[h,s,n,o]=[h,s,n,o].sort(),s===n?this.move(h,s-h,o-n):this.edit([1,h,s-h,n-s],[1,n,o-n,h-n])}modify_at(t,e,i){return this.modify(this.indexOf(t),e,i)}modify_before(t,e,i){return this.modify(this.indexOf(t)-e,e,i)}modify_after(t,e,i){return this.modify(this.indexOf(t)+1,e,i)}modify_range(t,e,i){const r=this.indexOf(t),s=this.indexOf(e)+1;return this.modify(r,s-r,i)}delete(t,e=1){return this.modify(t,e,[])}prefix(...t){return this.modify(0,0,t)}postfix(...t){return this.modify(this.length,0,t)}unprefix(t){return this.delete(0,t)}unpostfix(t){return this.delete(this.length-t,t)}assign(t){return this.modify(0,this.length,t)}set(t,e){return this.modify(t,1,[e])}set val(t){this.modify(0,1,[t])}guard(t,i,r){if(this.set_to(t,{[e]:(t,e,s,[,n],o,h)=>{if(r)for(let t=o.length-1;t>=0;t--)r(o[t],n+t);if(i)for(let t=0;t<h.length;t++)i(h[t],n+t)}}),i)for(let t=0;t<this.length;t++)i(this[t],t);return this}bind_map(t,r){const s=[].guard(null,null,(t=>t.forEach((([t,e])=>t.unset_to(e))))),n=(t,e,i,[,s,n,h])=>{const d=[];e.modify(s,n,h.map(((t,n)=>{const h=s+n,c=[],f=()=>{const s=[];e.set(h,r(t,h,o(s,f))),i.set(h,s)},u=r(t,h,o(c,f));return d.push(c),u}))),i.modify(s,n,d)};return n(0,this,s,[0,0,0,t]),this.bind(t,{[i]:(t,e,i,r)=>{e.edit(r),i.edit(r)},[e]:n},s)}bind_reduce(t,i,r){const s=[],n=()=>{s[0]?.forEach((([t,e])=>t.unset_to(e)));const e=[],h=o(e,n);this.val=t.reduce(((t,e,r)=>i(t,e,r,h)),r),s[0]=e};return n(),this.bind(t,{[e]:n},s)}bind_sort(t,i){const r=[],s=()=>{r[0]?.forEach((([t,e])=>t.unset_to(e)));const e=[],n=o(e,s);this.assign(t.toSorted(((t,e)=>i(t,e,n)))),r[0]=e};return s(),this.bind(t,{[e]:s},r)}bmap(t){return(new this.constructor).bind_map(this,t)}breduce(t,e){return(new this.constructor).bind_reduce(this,t,e)}bsort(t){return(new this.constructor).bind_sort(this,t)}},Object.defineProperties(MahadArray.prototype,h);const d=Object.getOwnPropertyDescriptors(MahadArray.prototype);delete d.constructor,Array.unfold=MahadArray.unfold,Object.defineProperties(Array.prototype,d),t.MahadObject=class extends Object{static unfold(t,e){const i=new this;for(;;){let r;if([t,k,r]=e(t),void 0===r)break;i[k]=r}return i}reduce(t,e){const i=Object.entries(this);e??=i.pop();for(const[r,s]of i)e=t.call(this,e,s,r);return e}toString(){return`(${Object.entries(this).map((([t,e])=>t.toString()+":"+e.toString())).join(" ")})`}edit(...t){const e=this[s];let i=null;for(const r of t){const[t,s,n]=r;if(0===t){const t=this[s];void 0!==n?this[s]=n:delete this[s];for(const[i,[s,o]]of e[0])s(this,i,o,r,t,n);i=t}}for(const[i,[r,s]]of[...e[2]])r(this,i,s,t);return i}delete(...t){return this.edit(t.map((t=>[2,t,void 0])))}assign(t){return this.edit(Object.entries(t).map((([t,e])=>[2,t,e])))}set(t,e){return this.edit([2,t,e])}guard(t,i,r){if(this.set_to(t,{[e]:(t,e,s,[,n],o,h)=>{r&&void 0!==o&&r(o,n),i&&void 0!==h&&i(h,n)}}),i)for(const[t,e]of Object.entries(this))i(e,t);return this}bind_reduce(t,e,i){const s=[],n=()=>{s[0]?.forEach((([t,e])=>t.unset_to(e)));const r=[],h=o(r,n);this.val=t.reduce(((t,i,r)=>e(t,i,r,h)),i),s[0]=r};return n(),this.bind(t,{[r]:n},s)}breduce(t,e){return(new this.constructor).bind_reduce(this,t,e)}},Object.defineProperties(MahadObject.prototype,h);const c=Object.getOwnPropertyDescriptors(MahadObject.prototype);delete c.constructor,Object.unfold=MahadObject.unfold,Object.defineProperties(Object.prototype,c)})(globalThis);